///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class VendasPorAnoModelData {
/*
{
  "anoVenda": 2023,
  "numMes": 1,
  "nomeMes": "JANEIRO  ",
  "qtdVendas": 5846,
  "mediaVendas": 100.8686,
  "totBruto": 646132.4617,
  "totDesconto": 56454.1286,
  "perDesc": 8.7372,
  "totDevolucao": 21446.5257,
  "totLiquido": 589678.3331,
  "totVendaGeral": 3595875.35,
  "percGeral": 16.3987,
  "percLucroBrutoEntrada": 29.2812,
  "totCustoEnt": 417013.445,
  "vlrLucroBrutoEntrada": 172664.8881,
  "percLucroBrutoSaida": 100,
  "totCustoSaida": 0,
  "vlrLucroBrutoSaida": 589678.3331
} 
*/

  int? anoVenda;
  int? numMes;
  String? nomeMes;
  int? qtdVendas;
  double? mediaVendas;
  double? totBruto;
  double? totDesconto;
  double? perDesc;
  double? totDevolucao;
  double? totLiquido;
  double? totVendaGeral;
  double? percGeral;
  double? percLucroBrutoEntrada;
  double? totCustoEnt;
  double? vlrLucroBrutoEntrada;
  int? percLucroBrutoSaida;
  int? totCustoSaida;
  double? vlrLucroBrutoSaida;

  VendasPorAnoModelData({
    this.anoVenda,
    this.numMes,
    this.nomeMes,
    this.qtdVendas,
    this.mediaVendas,
    this.totBruto,
    this.totDesconto,
    this.perDesc,
    this.totDevolucao,
    this.totLiquido,
    this.totVendaGeral,
    this.percGeral,
    this.percLucroBrutoEntrada,
    this.totCustoEnt,
    this.vlrLucroBrutoEntrada,
    this.percLucroBrutoSaida,
    this.totCustoSaida,
    this.vlrLucroBrutoSaida,
  });
  VendasPorAnoModelData.fromJson(Map<String, dynamic> json) {
    anoVenda = json['anoVenda']?.toInt();
    numMes = json['numMes']?.toInt();
    nomeMes = json['nomeMes']?.toString();
    qtdVendas = json['qtdVendas']?.toInt();
    mediaVendas = json['mediaVendas']?.toDouble();
    totBruto = json['totBruto']?.toDouble();
    totDesconto = json['totDesconto']?.toDouble();
    perDesc = json['perDesc']?.toDouble();
    totDevolucao = json['totDevolucao']?.toDouble();
    totLiquido = json['totLiquido']?.toDouble();
    totVendaGeral = json['totVendaGeral']?.toDouble();
    percGeral = json['percGeral']?.toDouble();
    percLucroBrutoEntrada = json['percLucroBrutoEntrada']?.toDouble();
    totCustoEnt = json['totCustoEnt']?.toDouble();
    vlrLucroBrutoEntrada = json['vlrLucroBrutoEntrada']?.toDouble();
    percLucroBrutoSaida = json['percLucroBrutoSaida']?.toInt();
    totCustoSaida = json['totCustoSaida']?.toInt();
    vlrLucroBrutoSaida = json['vlrLucroBrutoSaida']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['anoVenda'] = anoVenda;
    data['numMes'] = numMes;
    data['nomeMes'] = nomeMes;
    data['qtdVendas'] = qtdVendas;
    data['mediaVendas'] = mediaVendas;
    data['totBruto'] = totBruto;
    data['totDesconto'] = totDesconto;
    data['perDesc'] = perDesc;
    data['totDevolucao'] = totDevolucao;
    data['totLiquido'] = totLiquido;
    data['totVendaGeral'] = totVendaGeral;
    data['percGeral'] = percGeral;
    data['percLucroBrutoEntrada'] = percLucroBrutoEntrada;
    data['totCustoEnt'] = totCustoEnt;
    data['vlrLucroBrutoEntrada'] = vlrLucroBrutoEntrada;
    data['percLucroBrutoSaida'] = percLucroBrutoSaida;
    data['totCustoSaida'] = totCustoSaida;
    data['vlrLucroBrutoSaida'] = vlrLucroBrutoSaida;
    return data;
  }
}

class VendasPorAnoModel {
/*
{
  "success": true,
  "data": [
    {
      "anoVenda": 2023,
      "numMes": 1,
      "nomeMes": "JANEIRO  ",
      "qtdVendas": 5846,
      "mediaVendas": 100.8686,
      "totBruto": 646132.4617,
      "totDesconto": 56454.1286,
      "perDesc": 8.7372,
      "totDevolucao": 21446.5257,
      "totLiquido": 589678.3331,
      "totVendaGeral": 3595875.35,
      "percGeral": 16.3987,
      "percLucroBrutoEntrada": 29.2812,
      "totCustoEnt": 417013.445,
      "vlrLucroBrutoEntrada": 172664.8881,
      "percLucroBrutoSaida": 100,
      "totCustoSaida": 0,
      "vlrLucroBrutoSaida": 589678.3331
    }
  ]
} 
*/

  bool? success;
  List<VendasPorAnoModelData?>? data;

  VendasPorAnoModel({
    this.success,
    this.data,
  });
  VendasPorAnoModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <VendasPorAnoModelData>[];
      v.forEach((v) {
        arr0.add(VendasPorAnoModelData.fromJson(v));
      });
      data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['data'] = arr0;
    }
    return data;
  }
}
