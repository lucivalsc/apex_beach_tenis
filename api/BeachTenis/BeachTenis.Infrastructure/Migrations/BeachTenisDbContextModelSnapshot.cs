// <auto-generated />
using System;
using BeachTenis.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BeachTenis.Infrastructure.Migrations
{
    [DbContext(typeof(BeachTenisDbContext))]
    partial class BeachTenisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BeachTenis.Core.Entidades.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("endereco");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dataNascimento");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Code")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<string>("Facebook")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("facebook");

                    b.Property<int>("IdArena")
                        .HasColumnType("integer")
                        .HasColumnName("idArena");

                    b.Property<int>("IdProfessional")
                        .HasColumnType("integer")
                        .HasColumnName("idProfessional");

                    b.Property<string>("IdUserProvider")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("idLoginRedeSocial");

                    b.Property<string>("Instagram")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("instagram");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("senha");

                    b.Property<string>("PhotoUrlProvider")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("fotoLoginRedeSocial");

                    b.Property<string>("Photograph")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("foto");

                    b.Property<int>("Provider")
                        .HasColumnType("integer")
                        .HasColumnName("loginRedeSocial");

                    b.Property<string>("RG")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("rg");

                    b.Property<string>("Sex")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("sexo");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Telephone")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("telefone");

                    b.Property<int>("UserType")
                        .HasColumnType("integer")
                        .HasColumnName("tipoUsuario");

                    b.Property<bool>("YesWhatsapp")
                        .HasColumnType("boolean")
                        .HasColumnName("ehWhatsapp");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
